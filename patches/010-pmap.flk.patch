diff --git a/flk b/flk
index 7cfed6d..1e8a91c 100755
--- a/flk
+++ b/flk
@@ -368,19 +368,56 @@ _pmap_with_type () {
     local constructor="${1}"; shift
     local f="${1}"; shift
     local items="${ANON["${1}"]}"; shift
+
+    # core count
+    local cores=0
+    while read -r line; do
+        if [[ "$line" =~ "processor" ]]; then
+            ((cores++))
+        fi
+    done < "/proc/cpuinfo"
+
+    # create id for shared memory
+    time_ms; local pmap_id="${ANON["${r}"]}"
+
     eval "${constructor}"; local new_seq="${r}"
-    for v in ${items}; do
-        #echo eval ${f%%@*} "${v}" "${@}"
-        eval ${f%%@*} "${v}" "${@}" &
-        [[ "${__ERROR}" ]] && r= && return 1
-        _conj! "${new_seq}" "${r}"
+
+    local index=0
+    for v in ${items}; do        
+        (
+            eval ${f%%@*} "${v}" "${@}" 
+            [[ "${__ERROR}" ]] && r= && return 1;
+
+            # send result to shared memory
+            echo "${index} ${r} \"${ANON["${r}"]}\"" >> "/dev/shm/pmap_${pmap_id}"
+        ) &
+
+        ((index++))
+        
+        # threads = cores + 1
+        if [[ $(jobs -r -p | wc -l) -gt $cores ]]; then
+            wait -n
+        fi
     done
+
+    # wait for inital threads
+    wait
+    
+    while  IFS= read -r line; do
+        declare -a _array_line="(${line})"
+
+        _obj_type "${_array_line[1]}"
+        eval "_${r}" "${_array_line[2]}"
+        _conj! "${new_seq}" "${r}";
+        
+    done < <(sort -n "/dev/shm/pmap_${pmap_id}")
+    # rm "/dev/shm/pmap_${pmap_id}"
+
     r="${new_seq}"
 }
 
 _pmap () {
     _pmap_with_type _list "${@}"
-    wait
 }
 
 fi
